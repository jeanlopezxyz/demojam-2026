apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.fullname" . }}
  namespace: {{ .Values.namespace | default "backstage" }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: backstage
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_CONFIG_app_title
          value: {{ .Values.config.app.title | quote }}
        - name: APP_CONFIG_app_baseUrl
          value: {{ .Values.config.app.baseUrl }}
        - name: APP_CONFIG_backend_baseUrl
          value: {{ .Values.config.backend.baseUrl }}
        - name: POSTGRES_HOST
          value: "postgresql"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.auth.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.auth.password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.auth.database }}
        {{- if .Values.plugins.aiAssistant.enabled }}
        - name: AI_ASSISTANT_API_URL
          value: {{ .Values.plugins.aiAssistant.apiUrl }}
        - name: BOOKSTACK_URL
          value: {{ .Values.plugins.aiAssistant.bookstackUrl }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL