{{- if .Values.aiAssistantPipeline.enabled }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.aiAssistantPipeline.name }}
  namespace: {{ .Values.namespace | default "openshift-pipelines" }}
  labels:
    app: ai-assistant-pipeline
    component: ci-cd
spec:
  params:
  - name: git-url
    type: string
    description: Git repository URL
    default: {{ .Values.aiAssistantPipeline.gitRepository.url }}
  - name: git-revision
    type: string
    description: Git revision to build
    default: {{ .Values.aiAssistantPipeline.gitRepository.branch }}
  - name: image-name
    type: string
    description: Container image name
    default: "{{ .Values.aiAssistantPipeline.imageRegistry.url }}/{{ .Values.aiAssistantPipeline.imageRegistry.namespace }}/ai-assistant"
    
  workspaces:
  - name: shared-workspace
    description: Shared workspace for pipeline tasks
    
  tasks:
  {{- if .Values.tasks.gitClone.enabled }}
  - name: git-clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: shared-workspace
  {{- end }}
  
  {{- if .Values.tasks.maven.enabled }}
  - name: maven-build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
    - git-clone
    params:
    - name: GOALS
      value: {{ .Values.tasks.maven.goals | quote }}
    workspaces:
    - name: source
      workspace: shared-workspace
  {{- end }}
  
  {{- if .Values.tasks.securityScan.enabled }}
  - name: security-scan
    taskRef:
      name: trivy-scanner
      kind: ClusterTask
    runAfter:
    - maven-build
    params:
    - name: IMAGE
      value: $(params.image-name):$(params.git-revision)
    workspaces:
    - name: manifest-dir
      workspace: shared-workspace
  {{- end }}
  
  {{- if .Values.tasks.buildah.enabled }}
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
    - security-scan
    params:
    - name: IMAGE
      value: $(params.image-name):$(params.git-revision)
    - name: DOCKERFILE
      value: ./Dockerfile
    workspaces:
    - name: source
      workspace: shared-workspace
  {{- end }}
  
  - name: deploy-dev
    taskRef:
      name: argocd-task-sync-and-wait
      kind: ClusterTask
    runAfter:
    - build-image
    params:
    - name: application-name
      value: "ai-assistant"
    - name: revision
      value: $(params.git-revision)
{{- end }}